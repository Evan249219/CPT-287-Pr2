	public static int evaluatePostfix (String str) {
		
		//create a stack
		Stack<Integer> stack = new Stack<>();
		
		//scan all characters in str
		for(int i = 0; i < str.length(); i++) {
			char scan = str.charAt(i);
			
			if(scan == ' ') {
				continue;
			}
			
			//if scan is a number, push to stack
			else if(Character.isDigit(scan)) {
				int n = 0;
				
				//extract and store characters
				while(Character.isDigit(scan)) {
					n = n*10 + (int)(scan - '0');
					i++;
					scan = str.charAt(i);
				}
				i--;
				stack.push(n);
			}
			
			//else the character is an operator, pop 2 elements and apply operator
			else {
				int val1 = stack.pop();
				int val2 = stack.pop();
				
				
				//using a switch case until that is coded
				switch(scan) {
				case '+':
					stack.push(val2 + val1);
					break;
				
				case '-':
					stack.push(val2 +val1);
					break;
				
				case '/':
					if (val1 == 0) {
						System.out.println("Cannot divide by zero.");
						break;
					}
					else {
						stack.push(val2 / val1);
						break;
					}
				
				case '*':
					stack.push(val2 * val1);
					break;
				
				case '<':
					if (val2 < val1) {
						stack.push(1);
						break;
					}
					else {
						stack.push(0);
						break;
					}
				
				case '>':
					if (val2 > val1) {
						stack.push(1);
						break;
					}
					else {
						stack.push(0);
						break;
					}
				
				case '=':
					if (val2 == val1) {
						stack.push(1);
						break;
					}
					else {
						stack.push(0);
						break;
					}
				}
			}
		
		}
		
		return stack.pop();
	}
